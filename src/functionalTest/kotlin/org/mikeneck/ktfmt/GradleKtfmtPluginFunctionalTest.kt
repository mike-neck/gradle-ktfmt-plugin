/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package org.mikeneck.ktfmt

import java.io.File
import org.gradle.testkit.runner.GradleRunner
import org.junit.jupiter.api.assertAll
import kotlin.test.Test
import kotlin.test.assertEquals
import kotlin.test.assertTrue

/**
 * A simple functional test for the 'org.mikeneck.ktfmt.greeting' plugin.
 */
class GradleKtfmtPluginFunctionalTest {
    @Test fun `can run task`() {
        // Setup the test build
        val projectDir = File("build/functionalTest")
        projectDir.mkdirs()
        projectDir.resolve("settings.gradle").writeText("")
        projectDir.resolve("build.gradle").writeText("""
            plugins {
                id('org.mikeneck.ktfmt')
            }
        """)
        projectDir.resolve("src/main/kotlin/com/example").mkdirs()
        val file = projectDir.resolve("src/main/kotlin/com/example/App.kt")
        file.writeText("""package com.example
           |fun main() {println("fooo");val item = new Item("bar")
           |println("baz")
           |                      println(item.name)}
       |""".trimMargin("|"))

        // Run the build
        val runner = GradleRunner.create()
        runner.forwardOutput()
        runner.withPluginClasspath()
        runner.withArguments("ktfmt")
        runner.withProjectDir(projectDir)
        val result = runner.build()

        // Verify the result
        assertAll(
            { assertTrue(result.output.contains("1")) },
            {
                assertEquals(
                    """package com.example
                |
                |fun main() {
                |  println("fooo")
                |  val item = new Item ("bar")
                |  println("baz")
                |  println(item.name)
                |}
                |""".trimMargin(),
                    file.readText()
                )
            })
    }
}
